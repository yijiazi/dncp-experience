<section title="DNCP Performance Evaluation" anchor="evaluation">
    <t>This section provides different performance metrics for different network topologies of different sizes. Each value is the average over 10 simulations. Unless stated otherwise, the 10 measures always were pretty close (Small standard deviation).</t>

<t>Each simulation reflects the same scenario. All DNCP instances are simultaneously initialized. The simulation is then run until the network converges, and performance metrics introduced in <xref target="metric"/> are computed. 
</t>

<t>Important: Note that, as DNCP uses Trickle, it is expected to be very verbose in case of dramatic changes, but as a tradeoff should provide good convergence times and low verbosity in the absence of changes. An instantaneous and complete boostrap of the network, which is the present scenario, is a particularly significant state change. This scenario was selected as a worst case to see whether DNCP converges well, or at-all. On that side, DNCP behaved well, but as expected, the overall amount of generated traffic sometime appeared to be significant.</t>

	<section title="Results for the Single Link Topology">
		<texttable anchor='table1' title="Single Link Topology (1)">
        	<preamble></preamble>
            <ttcol align='center'>Number of nodes</ttcol>
        	<ttcol align='center'>10 nodes</ttcol>
        	<ttcol align='center'>20 nodes</ttcol>
        	<ttcol align='center'>30 nodes</ttcol>
        	<ttcol align='center'>40 nodes</ttcol>
            <c>Convergence time</c>
        	<c>1.84s</c>
        	<c>3.09s</c> 
        	<c>*4.43s </c>
        	<c>5.14s</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent</c>
            <c>85.3KB</c>
            <c>604.7KB</c>
            <c>2.3MB</c>
            <c>5.4MB</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent per node</c>
            <c>8.5KB</c>
            <c>30.2KB</c>
            <c>79.6KB</c>
            <c>140.7KB</c>
        	<postamble> </postamble>
    		</texttable>
        
        
        
        <texttable anchor='table11' title="Single Link Topology (2)">
            <preamble></preamble>
            <ttcol align='center'>Number of nodes</ttcol>
            <ttcol align='center'>50 nodes</ttcol>
            <ttcol align='center'>60 nodes</ttcol>
            <ttcol align='center'>70 nodes</ttcol>
            <ttcol align='center'>80 nodes</ttcol>
            <c>Convergence time</c>
            <c>6.53s</c>
            <c>*8.61s</c>
            <c>11.57s</c>
            <c>14.05s</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent</c>
            <c>11.9MB</c>
            <c>23.7MB</c>
            <c>51.7MB</c>
            <c>88.1MB</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent per node</c>
            <c>245.KB</c>
            <c>404.8KB</c>
            <c>757.2KB</c>
            <c>1.1MB</c>

            <postamble>*: the average value was calculated over the results of 9 experiments because one of the value was significantly greater.</postamble>
        </texttable>


	<t>
        Note that two accidents were observed during the simulation. One happened in one experiment among the 10 that we ran for 30-node network, the network first converged at 4.016s, which is very close to the average convergence time, but at 25.949s this converging state was broken and the network finally reconverged at 26.12s. The other one was in a 60-node network experiment where it first converged at 7.081s then got disturbed at 25.822s and converged again at 26.303.
	</t>

    <t>Although the convergence time seems to grow linearly with the number of nodes, the overall traffic sent before convergence increases dramatically. This is caused by the fact that not-only each node will synchronize with any other node on the link, but the data will grow as nodes discover their neighbors. The problem is explained in <xref target="I-D.ietf-homenet-dncp"/> Section 6.2 (Support For Dense Broadcast Links). An optional solution to this problem is also specified in the document, but *was not* implemented in libdncp, which explains the bad performances.</t>

	</section>
	
	<section title="Results for the String Topology">
		<texttable anchor='table2' title="String topology (1)">
            <ttcol align='center'>Number of nodes</ttcol>
        	<ttcol align='center'>10 nodes</ttcol>
        	<ttcol align='center'>20 nodes</ttcol>
        	<ttcol align='center'>30 nodes</ttcol>
            <ttcol align='center'>40 nodes</ttcol>
            <c>Convergence time</c>
        	<c>1.84s</c>
        	<c>3.65s</c> 
        	<c>5.24s</c>
        	<c>7.09s</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent</c>
            <c>51.5KB</c>
            <c>243.4KB</c>
            <c>605KB</c>
            <c>1.2MB</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent per node</c>
            <c>5.1KB</c>
            <c>12.2KB</c>
            <c>20.1KB</c>
            <c>30.9KB</c>
        	<postamble></postamble>
    		</texttable>
        
        
        
        <texttable anchor='table21' title="String topology (2)">
            <preamble></preamble>
            <ttcol align='center'>Number of nodes</ttcol>
            <ttcol align='center'>50 nodes</ttcol>
            <ttcol align='center'>60 nodes</ttcol>
            <ttcol align='center'>70 nodes</ttcol>
            <ttcol align='center'>80 nodes</ttcol>
            <c>Convergence time</c>
            <c>8.79s</c>
            <c>11.11s</c>
            <c>12.87s</c>
            <c>15.03s</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent</c>
            <c>2MB</c>
            <c>3MB</c>
            <c>4.1MB</c>
            <c>5.6MB</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent per node</c>
            <c>40.5KB</c>
            <c>50.4KB</c>
            <c>59.2KB</c>
            <c>70.1KB</c>

            <postamble></postamble>
        </texttable>

    <t>These results show that in a linear network, convergence time is linear, but the overall tranmitted traffic is not. This can be easily explained as the convergence time reflects the time for both extremities to discover each other, but in the meantime, other updates are sent. The slope of the convergence time line is 0.18 second per node, which is pretty quick, but also comes at the cost of transmitting multiple updates before all nodes are discovered. Please note that, as DNCP is based on Trickle, it is expected to be particularly verbose in case of changes, but also very silent and fast to react when updates are rare.</t>
	</section>

	<section title="Results for the full mesh topology">
		<texttable anchor='table3' title="Full mesh topology (1)">
            <preamble></preamble>
            <ttcol align='center'>Number of nodes</ttcol>
        	<ttcol align='center'>10 nodes</ttcol>
        	<ttcol align='center'>20 nodes</ttcol>
        	<ttcol align='center'>30 nodes</ttcol>
            <ttcol align='center'>40 nodes</ttcol>
            <c>Convergence time</c>
        	<c>1.71s</c>
        	<c>3.2s</c> 
        	<c>4.83s</c>
        	<c>*6.19s</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent</c>
            <c>202.7KB</c>
            <c>1.6MB</c>
            <c>6.6MB</c>
            <c>18.1MB</c>

            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent per node</c>
            <c>20.3KB</c>
            <c>83.5KB</c>
            <c>222.1KB</c>
            <c>453.8KB</c>


        	<postamble>*: the average value was calculated over the results of 9 experiments because the other one diverges too much </postamble>
    		</texttable>
        
        
        <texttable anchor='table31' title="Full mesh topology (2)">
            <preamble></preamble>
            <ttcol align='center'>Number of nodes</ttcol>
            <ttcol align='center'>50 nodes</ttcol>
            <ttcol align='center'>60 nodes</ttcol>
            <ttcol align='center'>70 nodes</ttcol>
            <ttcol align='center'>80 nodes</ttcol>
            <c>Convergence time</c>
            <c>10.64s</c>
            <c>13.02s</c>
            <c>15.33s</c>
            <c>17.93s</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent</c>
            <c>49.1MB</c>
            <c>95.8MB</c>
            <c>167.4MB</c>
            <c>271.9MB</c>
            
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent per node</c>
            <c>983.1KB</c>
            <c>1.6MB</c>
            <c>2.4MB</c>
            <c>3.4MB</c>

            <postamble></postamble>
        </texttable>

<t>An incident similar to the one that occured with a single link topology was observed. Although the convergence time is low, the amount of transmitted traffic is very high compared to other topologies. It can be explained by the number of distinct links (equal to N(N-1)/2): Trickle has to converge on each individual link. Unlike the single link topology, this situation is harder to detect and resolve.</t>
	</section>

	<section title="Results for the tree topology">

		<texttable anchor='table4' title="Tree topology (1)">
            <preamble></preamble>
            <ttcol align='center'>Number of nodes</ttcol>
        	<ttcol align='center'>10 nodes</ttcol>
        	<ttcol align='center'>20 nodes</ttcol>
        	<ttcol align='center'>30 nodes</ttcol>
            <ttcol align='center'>40 nodes</ttcol>
            <c>Convergence time</c>
        	<c>1.16s</c>
        	<c>1.57s</c> 
        	<c>1.86s</c>
        	<c>2s</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent</c>
            <c>40.7KB</c>
            <c>166.7KB</c>
            <c>374KB</c>
            <c>644.5KB</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent per node</c>
            <c>4.1KB</c>
            <c>8.3KB</c>
            <c>12.4KB</c>
            <c>16.1KB</c>

        	<postamble></postamble>
    		</texttable>
        
        
        <texttable anchor='table41' title="Tree topology (2)">
            <preamble></preamble>
            <ttcol align='center'>Number of nodes</ttcol>
            <ttcol align='center'>50 nodes</ttcol>
            <ttcol align='center'>60 nodes</ttcol>
            <ttcol align='center'>70 nodes</ttcol>
            <ttcol align='center'>80 nodes</ttcol>
            <c>Convergence time</c>
            <c>2.33s</c>
            <c>2.42s</c>
            <c>2.56s</c>
            <c>2.6s</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent</c>
            <c>1MB</c>
            <c>1.3MB</c>
            <c>1.9MB</c>
            <c>2.4MB</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent per node</c>
            <c>20.2KB</c>
            <c>22.8KB</c>
            <c>26.7KB</c>
            <c>29.9KB</c>
            <postamble></postamble>
        </texttable>

<t>As expected in a tree topology, the convergence time is sub-linear. We also oberve that the overall amount of traffic (and per node) is relativly low compared to other topologies. This is quite satisfying as the tree and double-tree topoligies were supposed to reflect more realistic networks.</t>
	</section>

	<section title="Results for the double-tree topology">

            <texttable anchor='table5' title="Double-tree topology (1)">
            <preamble></preamble>
            <ttcol align='center'>Number of nodes</ttcol>
        	<ttcol align='center'>10 nodes</ttcol>
        	<ttcol align='center'>20 nodes</ttcol>
        	<ttcol align='center'>30 nodes</ttcol>
            <ttcol align='center'>40 nodes</ttcol>
            <c>Convergence time</c>
        	<c>1.04s</c>
        	<c>1.44s</c> 
        	<c>1.5s</c>
        	<c>1.7s</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent</c>
            <c>66.9KB</c>
            <c>265KB</c>
            <c>605.1KB</c>
            <c>1MB</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent per node</c>
            <c>6.7KB</c>
            <c>13.2KB</c>
            <c>20.2KB</c>
            <c>25.3KB</c>

        	<postamble></postamble>
    		</texttable>
        
        
        
        <texttable anchor='table51' title="Double-tree topology (2)">
            <preamble></preamble>
            <ttcol align='center'>Number of nodes</ttcol>
            <ttcol align='center'>50 nodes</ttcol>
            <ttcol align='center'>60 nodes</ttcol>
            <ttcol align='center'>70 nodes</ttcol>
            <ttcol align='center'>80 nodes</ttcol>
            <c>Convergence time</c>
            <c>1.96s</c>
            <c>1.98s</c>
            <c>2.06s</c>
            <c>2.09s</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent</c>
            <c>1.5MB</c>
            <c>2MB</c>
            <c>2.8MB</c>
            <c>3.5MB</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>----</c>
            <c>Traffic sent per node</c>
            <c>30.8KB</c>
            <c>33.2KB</c>
            <c>39.7KB</c>
            <c>44.7KB</c>
            <postamble></postamble>
        </texttable>
<t>
Results are quite similar to the simple tree topology. The convergence delay is very satisfying while the overall amount of traffic is pretty low compared to other topologies.
</t>
	</section>

</section>
