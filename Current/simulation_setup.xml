<section title="Simulation Setup" anchor="setup">
	<section title="Simulation Environment">
<t>
To integrate dncp into ns3, an application in ns3 called "DncpApplication" is created, this application can be installed on the node and can be started and stopped at given time. Once the application is launched, the node will begin the process of topology discovery and data synchronization by calling the founctions in the libdnc static library from inside the ns3 application. The APIs in libdncp interacting with lower layers and the event scheduler are redifined.
</t>

    	<figure anchor='figure_simulation'>
        <preamble></preamble>
        <artwork>
     
        +-----------------------------+
        |dncp implementation (Libdncp)|      
        +-----------------------------+
  +------------socket API----------------+  
  |     +----------------+               |    
  |     |  L4 (UDP)      |               |
  |     +----------------+               | 
  |                              NS3     |
  |     +----------------+               |    
  |     |  L3 (Ipv6)     |               |
  |     +----------------+               | 
  |                                      |
  |     +---------------------+          |	  
  |     |L1 and L2 (CsmaModel)|          |
  |     +---------------------+          |
  +--------------------------------------+

        </artwork>
        <postamble></postamble>
    </figure>
		
		<t>  
As showed in the graph above, all the application-level actions (processing packets, publishing tlvs...) are performed inside the libdncp implementation, the packets are sent to or received from the lower layers in ns3 through the redefined socket API. Udp is used for layer4 and Ipv6 for layer3. For layer1 and layer2, the CSMA model is chosen because it is designed in the spirit of Ethernet and is close to reality. CSMA model consists of 2 parts: CSMA channel and CSMA device. CSMA channel is the model of the transmission medium, and CSMA device is like an Ethernet device, CSMA devices are connected to the channel.
		</t>
		<t>
Listed below are layer1 and layer2 configurations that are used in simulation: 

       		<list style="symbols">
       			<t>
MTU:The mac level maximum transmission unit, set to 1500
			</t>
       			<t>
Encapsulation Mode: Type of link layer encapsulation to use. The mode is set to "Dix" which is commonly used in Ethernet.
			</t>
			<t>
TxQueue: Type of the transmit queue used by the device. Ns3 provides the possibility to choose from Codel queue, drop tail queue and RED (random early detection) queue. In the simulation drop tail queue is used and its buffer size is 100 packets. (bytes can also be used as the maximum queue size metrics)
			</t>
			<t>
Interframe gap: The pause between two frames, in the simulation it is 0.
			</t>

       			<t>
Data rate: The transmission data rate to be provided to the devices connected to the channel. That is the rate of the device pushing data into the channel. This attribute applies to all the devices on the same channel alike. In the simulation the value is set to 1000Mbps thus providing an infinite throughput to eliminate the impact of throughput on the performance of dncp, for the purpose of evaluating verbosity.
			</t>
			<t>
Delay: The speed-of-light propagation delay over the medium. Imagine there is a symmetrical hub that is of equal cable length to all the devices of the channel. When one device sends a packet to another device, the packet fist reaches the hub and is forwarded to the destination device, so the propagation delay is always the same for a given channel. In simulation, this delay is set to 1 micro second.
			</t>

		</list>
            	</t>

	</section>
	
	<section title="Performance metric">
        <t>
            <list style="symbols">
		<t>
Convergence time: The time that dncp takes for the network to converge. To show the network converging state a concept of converging percentage is introduced, which basically is the proportion of the biggest cluster of nodes in te network that shares the same network hash. Apparently when this percentage is 100%, the network has coverged. 
		</t>
		
		<t>
Verbosity: The number of overall bytes sent in the network before converging and the number of bytes sent by a node before converging.
		</t>
            </list>
    </t>
	</section> 

	<section title="Chosen toplogies">

    <t>This section describes the different topologies that have been used for our performances analysis. We picked topoligies which were:
            <list style="symbols">
                <t>Deterministic.</t>
                <t>Easily described and generated as a function of the number of nodes (called N).</t>
                <t>Representing different situation ultimatly testing different scalability properties.</t>
                </list>
    </t>
 
		<section title="Single link topology">
			<t>
                The single link topology puts all the nodes on the same link. Each node therefore has a single DNCP End-Point with N-1 neighbors. Such topology is well suited to evaluate DNCP scalability in terms of number of neighbors on a given link.
			</t>

    	<figure anchor='figure_link'>
        <preamble></preamble>
        <artwork>
n1       n2       n3       n4
|        |        |        |
----------------------------
        </artwork>
        <postamble>The single link topology for N=4.</postamble>
    </figure>


		</section>
		<section title="String topology">
			<t>
                The string topology chains all nodes one after the other. Each node has two DNCP End-Points with one neighbor on each side (except for the two extremities). Such topology is well suited to evaluate the converge time depending on the diameter of a network, as well as the scalability in terms of number of nodes.
			</t>	
	
    	<figure anchor='figure_string'>
        <preamble></preamble>
        <artwork>
        ---------       ---------
        |       |       |       |
n1      n2      n3      n4      n5      n6
|       |       |       |       |       |
---------       ---------       ---------
        </artwork>
        <postamble>The string topolofy for N=6</postamble>
    </figure>
	
		</section>		
		<section title="Mesh topology">
			<t>
                The mesh topology connects all nodes with distinct links. Each node has N-1 DNCP End-Points with one neighor on each side. Such topology is well suited to evaluate DNCP scalability in terms of the amount of nodes and end-points.
			</t>

	
		</section>
		<section title="Tree topology">
			<t>
                The tree topology forms a typical binary tree. More formaly, node i is connected with node 2*i + 1 and 2*i + 2, unless those numbers are greater or equal to N. In such topology, all nodes except the root one have three DNCP End-Points with one neighbor on each. This topology offer a more realistic tradeoff between the diameter and the number of nodes.
			</t>
		</section>

		<section title="Double Tree topology">
			<t>
                The double tree topology is identical to the binary tree case, but each node is doubled with a redundancy node. In such topology, all nodes except the two root node have 6 DNCP End-Point with one neighbor on each. This topology also offers a more realistic tradeoff between the network diameter and the number of nodes, but also adds redundancy and loops.
			</t>		
		</section>
	
	</section> 
</section>
